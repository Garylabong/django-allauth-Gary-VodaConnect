# Generated by Django 3.0 on 2021-05-05 14:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=False)),
                ('is_staffs', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('create_pin', models.CharField(blank=True, max_length=100, null=True)),
                ('company_name', models.CharField(blank=True, choices=[('Vodaconnect', 'Vodaconnect'), ('G.P.G Corporation', 'G.P.G Corporation'), ('Landmaster.Us', 'Landmaster.Us'), ('CallMe.Com.Ph', 'CallMe.Com.Ph'), ('PsalmsGlobal.Com', 'PsalmsGlobal.Com'), ('Affiliate Partner', 'Affiliate Partner')], max_length=150, null=True)),
                ('designation_name', models.CharField(blank=True, choices=[('Staff', 'Staff'), ('New Client', 'New Client'), ('Current Client', 'Current Client'), ('Affiliate Partner', 'Affiliate Partner')], max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('affiliate_partner_code', models.CharField(blank=True, max_length=100, null=True)),
                ('affiliate_partner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pin', models.CharField(blank=True, max_length=100, null=True)),
                ('company_name', models.CharField(blank=True, choices=[('Vodaconnect', 'Vodaconnect'), ('G.P.G Corporation', 'G.P.G Corporation'), ('Landmaster.Us', 'Landmaster.Us'), ('CallMe.Com.Ph', 'CallMe.Com.Ph'), ('PsalmsGlobal.Com', 'PsalmsGlobal.Com'), ('Affiliate Partner', 'Affiliate Partner')], max_length=150, null=True)),
                ('designation_name', models.CharField(blank=True, choices=[('Staff', 'Staff'), ('New Client', 'New Client'), ('Current Client', 'Current Client'), ('Affiliate Partner', 'Affiliate Partner')], max_length=150, null=True)),
                ('lead_information', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientCode',
            fields=[
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('client_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientPersonalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_title', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.ClientCode')),
            ],
        ),
    ]
